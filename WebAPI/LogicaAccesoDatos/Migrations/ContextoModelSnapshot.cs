// <auto-generated />
using System;
using LogicaAccesoDatos;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LogicaAccesoDatos.Migrations
{
    [DbContext(typeof(Contexto))]
    partial class ContextoModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("LogicaNegocio.Entidades.Agencia", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.HasKey("Id");

                    b.ToTable("Agencias");
                });

            modelBuilder.Entity("LogicaNegocio.Entidades.Auditoria", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Accion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Auditoria");
                });

            modelBuilder.Entity("LogicaNegocio.Entidades.Envio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ClienteId")
                        .HasColumnType("int");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasMaxLength(13)
                        .HasColumnType("nvarchar(13)");

                    b.Property<int>("EmpleadoId")
                        .HasColumnType("int");

                    b.Property<int>("Estado")
                        .HasColumnType("int");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ClienteId");

                    b.HasIndex("EmpleadoId");

                    b.ToTable("Envios");

                    b.HasDiscriminator().HasValue("Envio");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("LogicaNegocio.Entidades.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("RolId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RolId");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("LogicaNegocio.EntidadesNegocio.Comentario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("EmpleadoId")
                        .HasColumnType("int");

                    b.Property<int?>("EnvioId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<string>("Texto")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("EmpleadoId");

                    b.HasIndex("EnvioId");

                    b.ToTable("Comentario");
                });

            modelBuilder.Entity("LogicaNegocio.ValueObjects.Rol", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("LogicaNegocio.Entidades.EnvioComun", b =>
                {
                    b.HasBaseType("LogicaNegocio.Entidades.Envio");

                    b.Property<int>("AgenciaId")
                        .HasColumnType("int");

                    b.HasIndex("AgenciaId");

                    b.HasDiscriminator().HasValue("EnvioComun");
                });

            modelBuilder.Entity("LogicaNegocio.Entidades.EnvioUrgente", b =>
                {
                    b.HasBaseType("LogicaNegocio.Entidades.Envio");

                    b.Property<int>("Eficiencia")
                        .HasColumnType("int");

                    b.Property<DateTime>("Entrega")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Salida")
                        .HasColumnType("datetime2");

                    b.HasDiscriminator().HasValue("EnvioUrgente");
                });

            modelBuilder.Entity("LogicaNegocio.Entidades.Agencia", b =>
                {
                    b.OwnsOne("LogicaNegocio.ValueObjects.DireccionPostal", "Direccion", b1 =>
                        {
                            b1.Property<int>("AgenciaId")
                                .HasColumnType("int");

                            b1.Property<string>("Valor")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("AgenciaId");

                            b1.ToTable("Agencias");

                            b1.WithOwner()
                                .HasForeignKey("AgenciaId");
                        });

                    b.OwnsOne("LogicaNegocio.ValueObjects.Nombre", "Nombre", b1 =>
                        {
                            b1.Property<int>("AgenciaId")
                                .HasColumnType("int");

                            b1.Property<string>("Valor")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("AgenciaId");

                            b1.ToTable("Agencias");

                            b1.WithOwner()
                                .HasForeignKey("AgenciaId");
                        });

                    b.OwnsOne("LogicaNegocio.ValueObjects.Coordenada", "Ubicacion", b1 =>
                        {
                            b1.Property<int>("AgenciaId")
                                .HasColumnType("int");

                            b1.Property<float>("Latitud")
                                .HasColumnType("real");

                            b1.Property<float>("Longitud")
                                .HasColumnType("real");

                            b1.HasKey("AgenciaId");

                            b1.ToTable("Agencias");

                            b1.WithOwner()
                                .HasForeignKey("AgenciaId");
                        });

                    b.Navigation("Direccion")
                        .IsRequired();

                    b.Navigation("Nombre")
                        .IsRequired();

                    b.Navigation("Ubicacion")
                        .IsRequired();
                });

            modelBuilder.Entity("LogicaNegocio.Entidades.Auditoria", b =>
                {
                    b.HasOne("LogicaNegocio.Entidades.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("LogicaNegocio.Entidades.Envio", b =>
                {
                    b.HasOne("LogicaNegocio.Entidades.Usuario", "Cliente")
                        .WithMany()
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("LogicaNegocio.Entidades.Usuario", "Empleado")
                        .WithMany()
                        .HasForeignKey("EmpleadoId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.OwnsOne("LogicaNegocio.ValueObjects.NroTracking", "NroTracking", b1 =>
                        {
                            b1.Property<int>("EnvioId")
                                .HasColumnType("int");

                            b1.Property<int>("Valor")
                                .HasColumnType("int");

                            b1.HasKey("EnvioId");

                            b1.ToTable("Envios");

                            b1.WithOwner()
                                .HasForeignKey("EnvioId");
                        });

                    b.OwnsOne("LogicaNegocio.ValueObjects.Peso", "Peso", b1 =>
                        {
                            b1.Property<int>("EnvioId")
                                .HasColumnType("int");

                            b1.Property<int>("Valor")
                                .HasColumnType("int");

                            b1.HasKey("EnvioId");

                            b1.ToTable("Envios");

                            b1.WithOwner()
                                .HasForeignKey("EnvioId");
                        });

                    b.Navigation("Cliente");

                    b.Navigation("Empleado");

                    b.Navigation("NroTracking")
                        .IsRequired();

                    b.Navigation("Peso")
                        .IsRequired();
                });

            modelBuilder.Entity("LogicaNegocio.Entidades.Usuario", b =>
                {
                    b.HasOne("LogicaNegocio.ValueObjects.Rol", "Rol")
                        .WithMany()
                        .HasForeignKey("RolId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("LogicaNegocio.ValueObjects.Nombre", "Nombre", b1 =>
                        {
                            b1.Property<int>("UsuarioId")
                                .HasColumnType("int");

                            b1.Property<string>("Valor")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("UsuarioId");

                            b1.ToTable("Usuarios");

                            b1.WithOwner()
                                .HasForeignKey("UsuarioId");
                        });

                    b.OwnsOne("LogicaNegocio.ValueObjects.Apellido", "Apellido", b1 =>
                        {
                            b1.Property<int>("UsuarioId")
                                .HasColumnType("int");

                            b1.Property<string>("Valor")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("UsuarioId");

                            b1.ToTable("Usuarios");

                            b1.WithOwner()
                                .HasForeignKey("UsuarioId");
                        });

                    b.OwnsOne("LogicaNegocio.ValueObjects.Email", "Email", b1 =>
                        {
                            b1.Property<int>("UsuarioId")
                                .HasColumnType("int");

                            b1.Property<string>("Valor")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("UsuarioId");

                            b1.ToTable("Usuarios");

                            b1.WithOwner()
                                .HasForeignKey("UsuarioId");
                        });

                    b.OwnsOne("LogicaNegocio.ValueObjects.Password", "Password", b1 =>
                        {
                            b1.Property<int>("UsuarioId")
                                .HasColumnType("int");

                            b1.Property<string>("Valor")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("UsuarioId");

                            b1.ToTable("Usuarios");

                            b1.WithOwner()
                                .HasForeignKey("UsuarioId");
                        });

                    b.Navigation("Apellido")
                        .IsRequired();

                    b.Navigation("Email")
                        .IsRequired();

                    b.Navigation("Nombre")
                        .IsRequired();

                    b.Navigation("Password")
                        .IsRequired();

                    b.Navigation("Rol");
                });

            modelBuilder.Entity("LogicaNegocio.EntidadesNegocio.Comentario", b =>
                {
                    b.HasOne("LogicaNegocio.Entidades.Usuario", "Empleado")
                        .WithMany()
                        .HasForeignKey("EmpleadoId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("LogicaNegocio.Entidades.Envio", null)
                        .WithMany("Comentarios")
                        .HasForeignKey("EnvioId");

                    b.Navigation("Empleado");
                });

            modelBuilder.Entity("LogicaNegocio.Entidades.EnvioComun", b =>
                {
                    b.HasOne("LogicaNegocio.Entidades.Agencia", "Agencia")
                        .WithMany()
                        .HasForeignKey("AgenciaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Agencia");
                });

            modelBuilder.Entity("LogicaNegocio.Entidades.EnvioUrgente", b =>
                {
                    b.OwnsOne("LogicaNegocio.ValueObjects.DireccionPostal", "Destino", b1 =>
                        {
                            b1.Property<int>("EnvioUrgenteId")
                                .HasColumnType("int");

                            b1.Property<string>("Valor")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("EnvioUrgenteId");

                            b1.ToTable("Envios");

                            b1.WithOwner()
                                .HasForeignKey("EnvioUrgenteId");
                        });

                    b.Navigation("Destino")
                        .IsRequired();
                });

            modelBuilder.Entity("LogicaNegocio.Entidades.Envio", b =>
                {
                    b.Navigation("Comentarios");
                });
#pragma warning restore 612, 618
        }
    }
}
